box = 'ubuntu/focal64'

nodes = [
	{
		:role => 'node',
		:box => box,
		:hostname => 'n101',
		:memory => 1024,
		:private_ip => '192.168.1.101',
		:public_ip => '192.168.0.101',
		:forwarded_22 => 10101,
		:forwarded_80 => 11101,
		:script => 'nxxx.sh',
		:ansible_yml => 'nxxx.ansible.yml'
	},
	{
		:role => 'node',
		:box => box,
		:hostname => 'n102',
		:memory => 1024,
		:private_ip => '192.168.1.102',
		:public_ip => '192.168.0.102',
		:forwarded_22 => 10102,
		:forwarded_80 => 11102,
		:script => 'nxxx.sh',
		:ansible_yml => 'nxxx.ansible.yml'
	},
	{
		:role => 'server',
		:box => box,
		:hostname => 's100',
		:memory => 1024,
		:private_ip => '192.168.1.100',
		:public_ip => '192.168.0.100',
		:forwarded_22 => 10100,
		:forwarded_80 => 11100,
		:script => 's100.sh',
		:ansible_yml => 's100.ansible.yml'
	},
]

Vagrant.configure("2") do |config|
	nodes.each do |node|
		config.vm.define node[:hostname] do |nodeconfig|
			nodeconfig.vm.box = node[:box]
			# for virtualbox provider
			nodeconfig.vm.provider "virtualbox" do |provider, override|								
				provider.memory = node[:memory]
				provider.cpus = 1
				# for virtualbox
				provider.name = node[:hostname]
				provider.gui = false
				provider.customize [
					"modifyvm", :id,
					"--cpuexecutioncap", "50",
					#"--nic1", "bridged",
					#"--bridgeadapter1", "eno1"
				]
			end
			nodeconfig.vm.hostname = node[:hostname]			
			nodeconfig.vm.network "public_network", ip: node[:public_ip], autoconfig: true, bridge: "eno1"
			nodeconfig.vm.network "private_network", ip: node[:private_ip], type: "dhcp"
			nodeconfig.vm.network "forwarded_port", guest: 22, host: node[:forwarded_22], auto_correct: true, id: "ssh"
			nodeconfig.vm.network "forwarded_port", guest: 80, host: node[:forwarded_80]
			# for Unixlike
			nodeconfig.vm.provision "shell", path: node[:script]
			nodeconfig.vm.provision "ansible" do |ansible|
				ansible.playbook = node[:ansible_yml]
			end
		end
	end
end
